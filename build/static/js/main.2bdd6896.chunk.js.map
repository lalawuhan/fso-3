{"version":3,"sources":["services/numbersService.js","components/Filter.js","components/Notification.js","components/PersonForm.js","components/Persons.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","Filter","query","handleSearch","value","onChange","Notification","message","includes","className","PersonForm","persons","setPersons","useState","newName","setNewName","phoneNumber","setPhoneNumber","setMessage","onSubmit","event","preventDefault","result","find","name","personObj","length","number","undefined","numbersService","then","response","concat","data","setTimeout","window","confirm","map","person","catch","error","target","type","Persons","contactsToShow","filter","toLowerCase","match","key","onClick","x","handleDelete","App","setQuery","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2bdd6896.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n};\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject);\n};\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject);\n};\nconst deleteNumber = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default {\n  getAll: getAll,\n  create: create,\n  update: update,\n  deleteNumber: deleteNumber,\n};\n","import React from \"react\";\n\nconst Filter = ({ query, handleSearch }) => {\n    return (\n        <>\n            Search for <input value={query} onChange={handleSearch} />\n        </>\n    );\n};\nexport default Filter;\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null;\n    }\n    if (message.includes(\"Success\")) {\n        return <div className=\"success\">{message}</div>;\n    }\n    if (message.includes(\"Info\")) {\n        return <div className=\"info\">{message}</div>;\n    } else {\n        return <div>{message}</div>;\n    }\n};\nexport default Notification;\n","import React, { useState } from \"react\";\nimport numbersService from \"../services/numbersService\";\nimport Notification from \"./Notification\";\nconst PersonForm = ({ persons, setPersons }) => {\n    const [newName, setNewName] = useState(\"\");\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const addPerson = (event) => {\n        event.preventDefault();\n\n        const result = persons.find(({ name }) => name === newName);\n        const personObj = {\n            name: newName,\n            id: persons.length + 1,\n            number: phoneNumber,\n        };\n\n        if (result === undefined) {\n            numbersService.create(personObj).then((response) => {\n                setPersons(persons.concat(response.data));\n                setMessage(`Success: Added ${response.data.name}`);\n                setTimeout(() => {\n                    setMessage(null);\n                }, 5000);\n            });\n        } else if (\n            window.confirm(\n                `${newName} is already added to phonebook, replace the old number with the new number?`\n            )\n        ) {\n            numbersService\n                .update(result.id, personObj)\n                .then((response) => {\n                    setPersons(\n                        persons.map((person) =>\n                            person.id === result.id ? response.data : person\n                        )\n                    );\n                    setMessage(`Success : Updated ${result.name}`);\n                    setTimeout(() => {\n                        setMessage(null);\n                    }, 5000);\n                })\n                .catch((error) => {\n                    setMessage(\n                        `Info: ${result.name} was already deleted from the server`\n                    );\n                    setTimeout(() => {\n                        setMessage(null);\n                    }, 5000);\n                });\n        }\n        setNewName(\"\");\n        setPhoneNumber(\"\");\n    };\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value);\n    };\n\n    const handlePhoneNumber = (event) => {\n        setPhoneNumber(event.target.value);\n    };\n    return (\n        <div>\n            <Notification message={message} />\n            <form onSubmit={addPerson}>\n                <div>\n                    name: <input value={newName} onChange={handleNameChange} />\n                </div>\n                <div>\n                    number:{\" \"}\n                    <input value={phoneNumber} onChange={handlePhoneNumber} />\n                </div>\n\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </div>\n    );\n};\nexport default PersonForm;\n","import React, { useState } from \"react\";\nimport numbersService from \"../services/numbersService\";\nimport Notification from \"./Notification\";\n\nconst Persons = ({ persons, query, setPersons }) => {\n    const contactsToShow = query\n        ? persons.filter((person) => person.name.toLowerCase().match(query))\n        : persons;\n    const [message, setMessage] = useState(\"\");\n\n    const handleDelete = (person) => {\n        if (window.confirm(`Delete ${person.name}?`)) {\n            let id = person.id;\n\n            numbersService\n                .deleteNumber(id)\n                .then(() => {\n                    setPersons(persons.filter((x) => x.id !== id));\n                })\n                .catch((error) => {\n                    setMessage(\n                        `Info: error in deleting ${person.name}. They have already been deleted. `\n                    );\n                    setTimeout(() => {\n                        setMessage(null);\n                    }, 5000);\n                });\n        } else return;\n    };\n    return (\n        <ul>\n            <Notification message={message} />\n\n            {contactsToShow.map((person) => (\n                <div key={person.id}>\n                    <p>\n                        {person.name} {person.number}\n                    </p>\n                    <button\n                        key={person.name}\n                        onClick={() => handleDelete(person)}\n                    >\n                        delete\n                    </button>\n                </div>\n            ))}\n        </ul>\n    );\n};\nexport default Persons;\n","import React, { useState, useEffect } from \"react\";\nimport numbersService from \"./services/numbersService\";\n\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n\n    const [query, setQuery] = useState(\"\");\n    const handleSearch = (event) => {\n        setQuery(event.target.value);\n    };\n    useEffect(() => {\n        numbersService.getAll().then((response) => {\n            setPersons(response.data);\n        });\n    }, []);\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Filter\n                value={query}\n                handleSearch={handleSearch}\n                persons={persons}\n            />\n            <h2>Add a new person</h2>\n            <PersonForm persons={persons} setPersons={setPersons} />\n            <h2>Numbers</h2>\n            <Persons persons={persons} query={query} setPersons={setPersons} />\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}